AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  sam-genai-rag-prototype

  SAM Template for sam-genai-rag-prototype

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3
    MemorySize: 128
    Environment:
      Variables:
        PINECONE_API_KEY: "4995b4bc-bb2d-4dfe-8bb3-992a10ea9854"
        PINECONE_ENVIRONMENT: "gcp-starter"
        PINECONE_INDEX_NAME: "agda-knowledge-base"

Resources:
  QAFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: qa/
      Handler: invoke.lambda_handler
      Runtime: python3.7
      Layers:
        - !Ref UtilsLayer
      Events:
        QA:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /qa
            Method: get
            
  UtilsLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: utils
      Description: "AWS Lambda Layer / shared utility functionality"
      ContentUri: utils/
      CompatibleRuntimes:
        - python3.7
        - python3.8
        - python3.9
        
  LandingZoneBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicPolicy: false
        IgnorePublicAcls: false
        RestrictPublicBuckets: false
      VersioningConfiguration:
        Status: Enabled

  LandingZoneBucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref LandingZoneBucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action: '*'
            Effect: Allow
            Resource:
              - !GetAtt LandingZoneBucket.Arn
              - !Sub
                  - '${varLandingZoneBucketArn}/*'
                  - varLandingZoneBucketArn: !GetAtt LandingZoneBucket.Arn
            Principal:
              AWS: '*'
              
  LandigZoneBucketAccessPoint:
    Type: 'AWS::S3::AccessPoint'
    Properties:
      Bucket: !Ref LandingZoneBucket
      Name: 'ingest-access-point'
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      
    
  DataIngestFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: data_ingest/
      Handler: invoke.lambda_handler
      Runtime: python3.7
      Events:
        FileUpLoad:
          Type: S3
          Properties:
            Bucket: !Ref LandingZoneBucket
            Events: s3:ObjectCreated:*

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  QAApi:
    Description: "API Gateway endpoint URL for Prod stage for Q&A function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/qa/"
  QAFunction:
    Description: "Q&A Lambda Function ARN"
    Value: !GetAtt QAFunction.Arn
  QAFunctionIamRole:
    Description: "Implicit IAM Role created for Q&A function"
    Value: !GetAtt QAFunctionRole.Arn

  LandingZoneBucketName:
    Description: "name of S3 bucket used as a file landing zone"
    Value: !Ref LandingZoneBucket
  LandigZoneBucketAccessPoint:
    Description: "Arn of the landing zone bucket's access point"
    Value: !GetAtt LandigZoneBucketAccessPoint.Arn
    
  DataIngestFunction:
    Description: "Data Ingest Lambda Function ARN"
    Value: !GetAtt DataIngestFunction.Arn
  DataIngestFunctionIamRole:
    Description: "Implicit IAM Role created for Data Ingest function"
    Value: !GetAtt DataIngestFunctionRole.Arn
